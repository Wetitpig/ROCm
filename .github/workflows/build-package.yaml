name: Build ROCm Package

on:
  workflow_call:
    inputs:
      PACKAGE_NAME:
        required: true
        type: string
      DEPENDS:
        required: false
        type: string
        default: ""

jobs:
  build:
    env:
      ROCM_VERSION: 6.2.2
      GPU_ARCHS: gfx900
    strategy:
      matrix:
        version: [22, 24]
    name: ${{inputs.PACKAGE_NAME}}-${{matrix.version}}.04
    runs-on: ubuntu-latest
    steps:
      - name: Maximise build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 30720
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true

      - name: Clone dependent repositories
        run: |
          mkdir -p ~/.bin && curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo && chmod a+rx ~/.bin/repo
          ~/.bin/repo init -u http://github.com/ROCm/ROCm.git -b roc-6.2.x -m tools/rocm-build/rocm-${ROCM_VERSION}.xml --depth 1 && ~/.bin/repo sync
          if [ ${{inputs.PACKAGE_NAME}} = "rocm_bandwidth_test" ]; then cd rocm_bandwidth_test && git fetch --unshallow; fi
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          path: ROCm

      - name: Analyse package dependencies
        id: analyse-deps
        run: |
          DEPS=$(echo '${{inputs.DEPENDS}}' | jq -r 'keys | map(tostring) | join(",")')
          if echo $DEPS | grep -q ','; then
            echo 'DEPS={'${DEPS}'}' >> $GITHUB_OUTPUT
          else
            echo 'DEPS='${DEPS} >> $GITHUB_OUTPUT
          fi
      - name: Download state dependencies
        if: ${{inputs.DEPENDS != '' && inputs.DEPENDS != '{}'}}
        uses: actions/download-artifact@v4
        with:
          pattern: State-${{steps.analyse-deps.outputs.DEPS}}-${{matrix.version}}.04-${{env.GPU_ARCHS}}
          merge-multiple: true
      - name: Download log dependencies
        if: ${{inputs.DEPENDS != '' && inputs.DEPENDS != '{}'}}
        uses: actions/download-artifact@v4
        with:
          pattern: Logs-${{steps.analyse-deps.outputs.DEPS}}-${{matrix.version}}.04-${{env.GPU_ARCHS}}
          path: out/ubuntu-${{matrix.version}}.04/${{matrix.version}}.04/logs
          merge-multiple: true

      - name: Make ROCm
        run: |
          docker run \
            -e ROCM_VERSION=${ROCM_VERSION} \
            -e GPU_ARCHS=${GPU_ARCHS} \
            -e CCACHE_DIR=$HOME/.ccache \
            -e CCACHE_ENABLED=true \
            -e DOCK_WORK_FOLD=/src \
            -v $PWD:/src \
            -v /etc/passwd:/etc/passwd \
            -v /etc/shadow:/etc/shadow \
            -v ${HOME}:${HOME} \
            -w /src \
            -u $(id -u):$(id -g) \
            rocm/rocm-build-ubuntu-${{matrix.version}}.04:6.2 \
            bash -c "set -exuo pipefail; \
              touch tar-diff-timestamp; \
              find . -maxdepth 1 -name '*.tar.gz' -exec echo "Untarring" {} \; -exec sudo tar xf {} -C / \; -exec rm {} \; ; \
              if [ -d out ]; then \
                sudo chown -R $USER: out; \
              fi; \
              rm -rf states; \
              make -f ROCm/tools/rocm-build/ROCm.mk -j ${NPROC:-$(nproc)} T_${{inputs.PACKAGE_NAME}}; \
              if [ ${{inputs.PACKAGE_NAME}} = 'hipcc' ]; then \
                sudo tar \
                  -N ./tar-diff-timestamp \
                  -czf state-${{inputs.PACKAGE_NAME}}-${{matrix.version}}.04-${{env.GPU_ARCHS}}.tar.gz \
                  /usr /opt /src/out/ubuntu-${{matrix.version}}.04/${{matrix.version}}.04/build/hipcc; \
              else \
                sudo tar \
                  -N ./tar-diff-timestamp \
                  -czf state-${{inputs.PACKAGE_NAME}}-${{matrix.version}}.04-${{env.GPU_ARCHS}}.tar.gz \
                  /usr /opt; \
              fi \
            "

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Package-${{inputs.PACKAGE_NAME}}-${{matrix.version}}.04-${{env.GPU_ARCHS}}
          path: out/ubuntu-${{matrix.version}}.04/${{matrix.version}}.04/deb
          retention-days: 3
      - name: Archive logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Logs-${{inputs.PACKAGE_NAME}}-${{matrix.version}}.04-${{env.GPU_ARCHS}}
          path: out/ubuntu-${{matrix.version}}.04/${{matrix.version}}.04/logs/${{inputs.PACKAGE_NAME}}*
          overwrite: true
          retention-days: 3
      - name: Upload state
        uses: actions/upload-artifact@v4
        with:
          name: State-${{inputs.PACKAGE_NAME}}-${{matrix.version}}.04-${{env.GPU_ARCHS}}
          path: state-${{inputs.PACKAGE_NAME}}-${{matrix.version}}.04-${{env.GPU_ARCHS}}.tar.gz
          compression-level: 0
          retention-days: 3
